console.log("chat_engine.js file is loaded !");class ChatEngine{constructor(e,s,o,t){console.log(o,"userId"),this.chatBox=$("#"+e),this.userEmail=s,this.userName=t,this.userId=o,this.timer=null,this.socket=io.connect("http://localhost:5000"),this.userEmail&&this.connectionHandler()}connectionHandler(){let e=this;this.socket.on("connect",(function(){console.log("connection established using sockets...!",e.userId),e.socket.emit("loggedin",e.userId),$("#user-chat-box").hide()})),e.socket.on("invite",(function(s){console.log("Invitation received to join a room"),console.log("Invition accepted to join the room"),e.socket.emit("joinRoom",s),$(`span[data-room="${s.room.room}"]`).attr("data-room-created","true")})),$("#chat-message-input-container").submit((async function(s){s.preventDefault();let o=$("#chat-message-input").val();console.log("After mgs is clicked: ");let t=$("#chat-message-input-container button").attr("data-room");""!=o&&"null"!=t&&($.ajax({type:"post",url:"/chats/create",data:$("#chat-message-input-container").serialize(),success:function(e){console.log("message sent "+e),new Noty({theme:"relax",text:"Message Sent!",type:"success",layout:"topRight",timeout:1500}).show()},error:function(e){console.log(e.responseText)}}),e.socket.emit("send_message",{message:o,user_email:e.userEmail,user_name:e.userName,user_id:e.userId,room:t}),$("#chat-message-input").val(""))})),e.socket.on("receive_message",(function(s){if(console.log("message received",s.message),$("#chat-message-input-container button").attr("data-room")==s.room){let o=$("<li>"),t="other-message";s.user_email==e.userEmail&&(t="self-message"),o.append($("<span>",{html:s.message})),o.append($("<sub>",{html:s.user_email})),o.addClass(t),$("#chat-messages-list").append(o),e.readMessages(s.room,s.user_id)}else{$(`span[data-room="${s.room}"] i`).removeClass("remove-new-message-icon"),console.log("class removed")}}))}createRoom(e,s){console.log("createRoom function is called with friendId",e);let o=$(`#chat-${e} span`).attr("data-room-created");console.log("isRoomExist value: ",o,$(`#chat-${e} span`));let t=$(`#chat-${e} span`).attr("data-room");"false"==o?(console.log("Room created successfully by you, room is: ",t),this.socket.emit("create",{room:t,userId:this.userId,withUserId:e}),$(`#chat-${e} span`).attr("data-room-created","true"),this.openChatWindow(t,e,s)):(console.log("Room already exists"),this.openChatWindow(t,e,s)),$(`span[data-room="${t}"] i`).addClass("remove-new-message-icon")}openChatWindow(e,s,o){$("#chat-messages-list").html(""),$("#user-chat-box").show(),$("#chat-message-input-container button").attr("data-room",e),$("#chat-with-friend").val(s),$("#chat-box-friend-name").html(o),console.log("New chat window opened"),this.fillChats(s),this.readMessages(e,s)}fillChats(e){let s=this;$.ajax({type:"get",url:"/chats",data:{friendId:e},success:function(e){console.log("message received "+e);for(let o of e.data.chats){let e=$("<li>"),t="other-message";o.from_user._id==s.userId&&(t="self-message"),e.append($("<span>",{html:o.message})),e.append($("<sub>",{html:o.from_user.email})),e.addClass(t),$("#chat-messages-list").append(e)}},error:function(e){console.log(e.responseText)}})}readMessages(e,s){console.log("under readMessages function: ",s),$.ajax({type:"get",url:"/chats/readMessages",data:{friendId:s},success:function(s){if(s.data.read){$(`span[data-room="${e}"] i`).addClass("remove-new-message-icon")}},error:function(e){console.log(error.responseText)}})}emitToRejoin(){console.log("input changed"),clearTimeout(this.timer),this.timer=setTimeout(()=>{let e=$("#chat-with-friend").val(),s=$("#chat-message-input-container button").attr("data-room");this.socket.emit("create",{room:s,userId:this.userId,withUserId:e}),console.log("Joining req resent")},300)}}function unreadMessages(){console.log("unreadmessages function is called"),$(".friends-of-user span").each((function(){let e=$(this),s=e.attr("data-friendId"),o=e.attr("data-room");$.ajax({type:"get",url:"/chats/checkUnreadMessages",data:{friendId:s},success:function(e){if(console.log("inside unreadMessages",e.data.unread),e.data.unread){$(`span[data-room="${o}"] i`).removeClass("remove-new-message-icon")}else{$(`span[data-room="${o}"] i`).addClass("remove-new-message-icon")}},error:function(e){console.log(error.responseText)}})}))}unreadMessages();